/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ispace.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ispace.model.LuanChuyen;
import ispace.model.LuanChuyenModel;
import ispace.model.LuanChuyenSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LuanChuyen service. Represents a row in the &quot;luanchuyen&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ispace.model.LuanChuyenModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LuanChuyenImpl}.
 * </p>
 *
 * @author PC
 * @see LuanChuyenImpl
 * @see ispace.model.LuanChuyen
 * @see ispace.model.LuanChuyenModel
 * @generated
 */
@JSON(strict = true)
public class LuanChuyenModelImpl extends BaseModelImpl<LuanChuyen>
	implements LuanChuyenModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a luan chuyen model instance should use the {@link ispace.model.LuanChuyen} interface instead.
	 */
	public static final String TABLE_NAME = "luanchuyen";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "vanbanid", Types.BIGINT },
			{ "kieuvanban", Types.BIGINT },
			{ "nguoigui", Types.BIGINT },
			{ "nguoinhan", Types.BIGINT },
			{ "ngaygui", Types.TIMESTAMP },
			{ "ngaynhan", Types.TIMESTAMP },
			{ "ykien", Types.VARCHAR },
			{ "hanxuly", Types.TIMESTAMP },
			{ "ykienphanhoi", Types.VARCHAR },
			{ "ngayphanhoi", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table luanchuyen (id LONG not null primary key,vanbanid LONG,kieuvanban LONG,nguoigui LONG,nguoinhan LONG,ngaygui DATE null,ngaynhan DATE null,ykien VARCHAR(75) null,hanxuly DATE null,ykienphanhoi VARCHAR(75) null,ngayphanhoi DATE null)";
	public static final String TABLE_SQL_DROP = "drop table luanchuyen";
	public static final String ORDER_BY_JPQL = " ORDER BY luanChuyen.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY luanchuyen.id ASC";
	public static final String DATA_SOURCE = "qlyvanbanDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.ispace.model.LuanChuyen"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.ispace.model.LuanChuyen"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LuanChuyen toModel(LuanChuyenSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LuanChuyen model = new LuanChuyenImpl();

		model.setId(soapModel.getId());
		model.setVanBanId(soapModel.getVanBanId());
		model.setKieuVanBan(soapModel.getKieuVanBan());
		model.setNguoiGui(soapModel.getNguoiGui());
		model.setNguoiNhan(soapModel.getNguoiNhan());
		model.setNgayGui(soapModel.getNgayGui());
		model.setNgayNhan(soapModel.getNgayNhan());
		model.setYKien(soapModel.getYKien());
		model.setHanXuLy(soapModel.getHanXuLy());
		model.setYKienPhanHoi(soapModel.getYKienPhanHoi());
		model.setNgayPhanHoi(soapModel.getNgayPhanHoi());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LuanChuyen> toModels(LuanChuyenSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LuanChuyen> models = new ArrayList<LuanChuyen>(soapModels.length);

		for (LuanChuyenSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.ispace.model.LuanChuyen"));

	public LuanChuyenModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LuanChuyen.class;
	}

	@Override
	public String getModelClassName() {
		return LuanChuyen.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("vanBanId", getVanBanId());
		attributes.put("kieuVanBan", getKieuVanBan());
		attributes.put("nguoiGui", getNguoiGui());
		attributes.put("nguoiNhan", getNguoiNhan());
		attributes.put("ngayGui", getNgayGui());
		attributes.put("ngayNhan", getNgayNhan());
		attributes.put("yKien", getYKien());
		attributes.put("hanXuLy", getHanXuLy());
		attributes.put("yKienPhanHoi", getYKienPhanHoi());
		attributes.put("ngayPhanHoi", getNgayPhanHoi());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long vanBanId = (Long)attributes.get("vanBanId");

		if (vanBanId != null) {
			setVanBanId(vanBanId);
		}

		Long kieuVanBan = (Long)attributes.get("kieuVanBan");

		if (kieuVanBan != null) {
			setKieuVanBan(kieuVanBan);
		}

		Long nguoiGui = (Long)attributes.get("nguoiGui");

		if (nguoiGui != null) {
			setNguoiGui(nguoiGui);
		}

		Long nguoiNhan = (Long)attributes.get("nguoiNhan");

		if (nguoiNhan != null) {
			setNguoiNhan(nguoiNhan);
		}

		Date ngayGui = (Date)attributes.get("ngayGui");

		if (ngayGui != null) {
			setNgayGui(ngayGui);
		}

		Date ngayNhan = (Date)attributes.get("ngayNhan");

		if (ngayNhan != null) {
			setNgayNhan(ngayNhan);
		}

		String yKien = (String)attributes.get("yKien");

		if (yKien != null) {
			setYKien(yKien);
		}

		Date hanXuLy = (Date)attributes.get("hanXuLy");

		if (hanXuLy != null) {
			setHanXuLy(hanXuLy);
		}

		String yKienPhanHoi = (String)attributes.get("yKienPhanHoi");

		if (yKienPhanHoi != null) {
			setYKienPhanHoi(yKienPhanHoi);
		}

		Date ngayPhanHoi = (Date)attributes.get("ngayPhanHoi");

		if (ngayPhanHoi != null) {
			setNgayPhanHoi(ngayPhanHoi);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getVanBanId() {
		return _vanBanId;
	}

	@Override
	public void setVanBanId(long vanBanId) {
		_vanBanId = vanBanId;
	}

	@JSON
	@Override
	public long getKieuVanBan() {
		return _kieuVanBan;
	}

	@Override
	public void setKieuVanBan(long kieuVanBan) {
		_kieuVanBan = kieuVanBan;
	}

	@JSON
	@Override
	public long getNguoiGui() {
		return _nguoiGui;
	}

	@Override
	public void setNguoiGui(long nguoiGui) {
		_nguoiGui = nguoiGui;
	}

	@JSON
	@Override
	public long getNguoiNhan() {
		return _nguoiNhan;
	}

	@Override
	public void setNguoiNhan(long nguoiNhan) {
		_nguoiNhan = nguoiNhan;
	}

	@JSON
	@Override
	public Date getNgayGui() {
		return _ngayGui;
	}

	@Override
	public void setNgayGui(Date ngayGui) {
		_ngayGui = ngayGui;
	}

	@JSON
	@Override
	public Date getNgayNhan() {
		return _ngayNhan;
	}

	@Override
	public void setNgayNhan(Date ngayNhan) {
		_ngayNhan = ngayNhan;
	}

	@JSON
	@Override
	public String getYKien() {
		if (_yKien == null) {
			return StringPool.BLANK;
		}
		else {
			return _yKien;
		}
	}

	@Override
	public void setYKien(String yKien) {
		_yKien = yKien;
	}

	@JSON
	@Override
	public Date getHanXuLy() {
		return _hanXuLy;
	}

	@Override
	public void setHanXuLy(Date hanXuLy) {
		_hanXuLy = hanXuLy;
	}

	@JSON
	@Override
	public String getYKienPhanHoi() {
		if (_yKienPhanHoi == null) {
			return StringPool.BLANK;
		}
		else {
			return _yKienPhanHoi;
		}
	}

	@Override
	public void setYKienPhanHoi(String yKienPhanHoi) {
		_yKienPhanHoi = yKienPhanHoi;
	}

	@JSON
	@Override
	public Date getNgayPhanHoi() {
		return _ngayPhanHoi;
	}

	@Override
	public void setNgayPhanHoi(Date ngayPhanHoi) {
		_ngayPhanHoi = ngayPhanHoi;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LuanChuyen.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LuanChuyen toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LuanChuyen)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LuanChuyenImpl luanChuyenImpl = new LuanChuyenImpl();

		luanChuyenImpl.setId(getId());
		luanChuyenImpl.setVanBanId(getVanBanId());
		luanChuyenImpl.setKieuVanBan(getKieuVanBan());
		luanChuyenImpl.setNguoiGui(getNguoiGui());
		luanChuyenImpl.setNguoiNhan(getNguoiNhan());
		luanChuyenImpl.setNgayGui(getNgayGui());
		luanChuyenImpl.setNgayNhan(getNgayNhan());
		luanChuyenImpl.setYKien(getYKien());
		luanChuyenImpl.setHanXuLy(getHanXuLy());
		luanChuyenImpl.setYKienPhanHoi(getYKienPhanHoi());
		luanChuyenImpl.setNgayPhanHoi(getNgayPhanHoi());

		luanChuyenImpl.resetOriginalValues();

		return luanChuyenImpl;
	}

	@Override
	public int compareTo(LuanChuyen luanChuyen) {
		long primaryKey = luanChuyen.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LuanChuyen)) {
			return false;
		}

		LuanChuyen luanChuyen = (LuanChuyen)obj;

		long primaryKey = luanChuyen.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LuanChuyen> toCacheModel() {
		LuanChuyenCacheModel luanChuyenCacheModel = new LuanChuyenCacheModel();

		luanChuyenCacheModel.id = getId();

		luanChuyenCacheModel.vanBanId = getVanBanId();

		luanChuyenCacheModel.kieuVanBan = getKieuVanBan();

		luanChuyenCacheModel.nguoiGui = getNguoiGui();

		luanChuyenCacheModel.nguoiNhan = getNguoiNhan();

		Date ngayGui = getNgayGui();

		if (ngayGui != null) {
			luanChuyenCacheModel.ngayGui = ngayGui.getTime();
		}
		else {
			luanChuyenCacheModel.ngayGui = Long.MIN_VALUE;
		}

		Date ngayNhan = getNgayNhan();

		if (ngayNhan != null) {
			luanChuyenCacheModel.ngayNhan = ngayNhan.getTime();
		}
		else {
			luanChuyenCacheModel.ngayNhan = Long.MIN_VALUE;
		}

		luanChuyenCacheModel.yKien = getYKien();

		String yKien = luanChuyenCacheModel.yKien;

		if ((yKien != null) && (yKien.length() == 0)) {
			luanChuyenCacheModel.yKien = null;
		}

		Date hanXuLy = getHanXuLy();

		if (hanXuLy != null) {
			luanChuyenCacheModel.hanXuLy = hanXuLy.getTime();
		}
		else {
			luanChuyenCacheModel.hanXuLy = Long.MIN_VALUE;
		}

		luanChuyenCacheModel.yKienPhanHoi = getYKienPhanHoi();

		String yKienPhanHoi = luanChuyenCacheModel.yKienPhanHoi;

		if ((yKienPhanHoi != null) && (yKienPhanHoi.length() == 0)) {
			luanChuyenCacheModel.yKienPhanHoi = null;
		}

		Date ngayPhanHoi = getNgayPhanHoi();

		if (ngayPhanHoi != null) {
			luanChuyenCacheModel.ngayPhanHoi = ngayPhanHoi.getTime();
		}
		else {
			luanChuyenCacheModel.ngayPhanHoi = Long.MIN_VALUE;
		}

		return luanChuyenCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", vanBanId=");
		sb.append(getVanBanId());
		sb.append(", kieuVanBan=");
		sb.append(getKieuVanBan());
		sb.append(", nguoiGui=");
		sb.append(getNguoiGui());
		sb.append(", nguoiNhan=");
		sb.append(getNguoiNhan());
		sb.append(", ngayGui=");
		sb.append(getNgayGui());
		sb.append(", ngayNhan=");
		sb.append(getNgayNhan());
		sb.append(", yKien=");
		sb.append(getYKien());
		sb.append(", hanXuLy=");
		sb.append(getHanXuLy());
		sb.append(", yKienPhanHoi=");
		sb.append(getYKienPhanHoi());
		sb.append(", ngayPhanHoi=");
		sb.append(getNgayPhanHoi());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("ispace.model.LuanChuyen");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vanBanId</column-name><column-value><![CDATA[");
		sb.append(getVanBanId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kieuVanBan</column-name><column-value><![CDATA[");
		sb.append(getKieuVanBan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiGui</column-name><column-value><![CDATA[");
		sb.append(getNguoiGui());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiNhan</column-name><column-value><![CDATA[");
		sb.append(getNguoiNhan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayGui</column-name><column-value><![CDATA[");
		sb.append(getNgayGui());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayNhan</column-name><column-value><![CDATA[");
		sb.append(getNgayNhan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yKien</column-name><column-value><![CDATA[");
		sb.append(getYKien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hanXuLy</column-name><column-value><![CDATA[");
		sb.append(getHanXuLy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yKienPhanHoi</column-name><column-value><![CDATA[");
		sb.append(getYKienPhanHoi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayPhanHoi</column-name><column-value><![CDATA[");
		sb.append(getNgayPhanHoi());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LuanChuyen.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LuanChuyen.class
		};
	private long _id;
	private long _vanBanId;
	private long _kieuVanBan;
	private long _nguoiGui;
	private long _nguoiNhan;
	private Date _ngayGui;
	private Date _ngayNhan;
	private String _yKien;
	private Date _hanXuLy;
	private String _yKienPhanHoi;
	private Date _ngayPhanHoi;
	private LuanChuyen _escapedModel;
}