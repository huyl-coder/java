/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.thuvien.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.thuvien.model.Phieumuon;
import com.thuvien.model.PhieumuonModel;
import com.thuvien.model.PhieumuonSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Phieumuon service. Represents a row in the &quot;phieumuon&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.thuvien.model.PhieumuonModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PhieumuonImpl}.
 * </p>
 *
 * @author PC
 * @see PhieumuonImpl
 * @see com.thuvien.model.Phieumuon
 * @see com.thuvien.model.PhieumuonModel
 * @generated
 */
@JSON(strict = true)
public class PhieumuonModelImpl extends BaseModelImpl<Phieumuon>
	implements PhieumuonModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a phieumuon model instance should use the {@link com.thuvien.model.Phieumuon} interface instead.
	 */
	public static final String TABLE_NAME = "phieumuon";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "nguoidungId", Types.BIGINT },
			{ "sachId", Types.BIGINT },
			{ "soluong", Types.BIGINT },
			{ "ngaymuon", Types.TIMESTAMP },
			{ "ngaytra", Types.TIMESTAMP },
			{ "xacnhan", Types.BIGINT },
			{ "trangthai", Types.BIGINT },
			{ "duyetmuon", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table phieumuon (id LONG not null primary key,nguoidungId LONG,sachId LONG,soluong LONG,ngaymuon DATE null,ngaytra DATE null,xacnhan LONG,trangthai LONG,duyetmuon LONG)";
	public static final String TABLE_SQL_DROP = "drop table phieumuon";
	public static final String ORDER_BY_JPQL = " ORDER BY phieumuon.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY phieumuon.id ASC";
	public static final String DATA_SOURCE = "qlythuvienDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.thuvien.model.Phieumuon"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.thuvien.model.Phieumuon"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Phieumuon toModel(PhieumuonSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Phieumuon model = new PhieumuonImpl();

		model.setId(soapModel.getId());
		model.setNguoiDung(soapModel.getNguoiDung());
		model.setSach(soapModel.getSach());
		model.setSoLuong(soapModel.getSoLuong());
		model.setNgayMuon(soapModel.getNgayMuon());
		model.setNgayTra(soapModel.getNgayTra());
		model.setXacNhan(soapModel.getXacNhan());
		model.setTrangThai(soapModel.getTrangThai());
		model.setDuyetMuon(soapModel.getDuyetMuon());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Phieumuon> toModels(PhieumuonSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Phieumuon> models = new ArrayList<Phieumuon>(soapModels.length);

		for (PhieumuonSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.thuvien.model.Phieumuon"));

	public PhieumuonModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Phieumuon.class;
	}

	@Override
	public String getModelClassName() {
		return Phieumuon.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("nguoiDung", getNguoiDung());
		attributes.put("sach", getSach());
		attributes.put("soLuong", getSoLuong());
		attributes.put("ngayMuon", getNgayMuon());
		attributes.put("ngayTra", getNgayTra());
		attributes.put("xacNhan", getXacNhan());
		attributes.put("trangThai", getTrangThai());
		attributes.put("duyetMuon", getDuyetMuon());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long nguoiDung = (Long)attributes.get("nguoiDung");

		if (nguoiDung != null) {
			setNguoiDung(nguoiDung);
		}

		Long sach = (Long)attributes.get("sach");

		if (sach != null) {
			setSach(sach);
		}

		Long soLuong = (Long)attributes.get("soLuong");

		if (soLuong != null) {
			setSoLuong(soLuong);
		}

		Date ngayMuon = (Date)attributes.get("ngayMuon");

		if (ngayMuon != null) {
			setNgayMuon(ngayMuon);
		}

		Date ngayTra = (Date)attributes.get("ngayTra");

		if (ngayTra != null) {
			setNgayTra(ngayTra);
		}

		Long xacNhan = (Long)attributes.get("xacNhan");

		if (xacNhan != null) {
			setXacNhan(xacNhan);
		}

		Long trangThai = (Long)attributes.get("trangThai");

		if (trangThai != null) {
			setTrangThai(trangThai);
		}

		Long duyetMuon = (Long)attributes.get("duyetMuon");

		if (duyetMuon != null) {
			setDuyetMuon(duyetMuon);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getNguoiDung() {
		return _nguoiDung;
	}

	@Override
	public void setNguoiDung(long nguoiDung) {
		_nguoiDung = nguoiDung;
	}

	@JSON
	@Override
	public long getSach() {
		return _sach;
	}

	@Override
	public void setSach(long sach) {
		_sach = sach;
	}

	@JSON
	@Override
	public long getSoLuong() {
		return _soLuong;
	}

	@Override
	public void setSoLuong(long soLuong) {
		_soLuong = soLuong;
	}

	@JSON
	@Override
	public Date getNgayMuon() {
		return _ngayMuon;
	}

	@Override
	public void setNgayMuon(Date ngayMuon) {
		_ngayMuon = ngayMuon;
	}

	@JSON
	@Override
	public Date getNgayTra() {
		return _ngayTra;
	}

	@Override
	public void setNgayTra(Date ngayTra) {
		_ngayTra = ngayTra;
	}

	@JSON
	@Override
	public long getXacNhan() {
		return _xacNhan;
	}

	@Override
	public void setXacNhan(long xacNhan) {
		_xacNhan = xacNhan;
	}

	@JSON
	@Override
	public long getTrangThai() {
		return _trangThai;
	}

	@Override
	public void setTrangThai(long trangThai) {
		_trangThai = trangThai;
	}

	@JSON
	@Override
	public long getDuyetMuon() {
		return _duyetMuon;
	}

	@Override
	public void setDuyetMuon(long duyetMuon) {
		_duyetMuon = duyetMuon;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Phieumuon.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Phieumuon toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Phieumuon)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PhieumuonImpl phieumuonImpl = new PhieumuonImpl();

		phieumuonImpl.setId(getId());
		phieumuonImpl.setNguoiDung(getNguoiDung());
		phieumuonImpl.setSach(getSach());
		phieumuonImpl.setSoLuong(getSoLuong());
		phieumuonImpl.setNgayMuon(getNgayMuon());
		phieumuonImpl.setNgayTra(getNgayTra());
		phieumuonImpl.setXacNhan(getXacNhan());
		phieumuonImpl.setTrangThai(getTrangThai());
		phieumuonImpl.setDuyetMuon(getDuyetMuon());

		phieumuonImpl.resetOriginalValues();

		return phieumuonImpl;
	}

	@Override
	public int compareTo(Phieumuon phieumuon) {
		long primaryKey = phieumuon.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Phieumuon)) {
			return false;
		}

		Phieumuon phieumuon = (Phieumuon)obj;

		long primaryKey = phieumuon.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Phieumuon> toCacheModel() {
		PhieumuonCacheModel phieumuonCacheModel = new PhieumuonCacheModel();

		phieumuonCacheModel.id = getId();

		phieumuonCacheModel.nguoiDung = getNguoiDung();

		phieumuonCacheModel.sach = getSach();

		phieumuonCacheModel.soLuong = getSoLuong();

		Date ngayMuon = getNgayMuon();

		if (ngayMuon != null) {
			phieumuonCacheModel.ngayMuon = ngayMuon.getTime();
		}
		else {
			phieumuonCacheModel.ngayMuon = Long.MIN_VALUE;
		}

		Date ngayTra = getNgayTra();

		if (ngayTra != null) {
			phieumuonCacheModel.ngayTra = ngayTra.getTime();
		}
		else {
			phieumuonCacheModel.ngayTra = Long.MIN_VALUE;
		}

		phieumuonCacheModel.xacNhan = getXacNhan();

		phieumuonCacheModel.trangThai = getTrangThai();

		phieumuonCacheModel.duyetMuon = getDuyetMuon();

		return phieumuonCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", nguoiDung=");
		sb.append(getNguoiDung());
		sb.append(", sach=");
		sb.append(getSach());
		sb.append(", soLuong=");
		sb.append(getSoLuong());
		sb.append(", ngayMuon=");
		sb.append(getNgayMuon());
		sb.append(", ngayTra=");
		sb.append(getNgayTra());
		sb.append(", xacNhan=");
		sb.append(getXacNhan());
		sb.append(", trangThai=");
		sb.append(getTrangThai());
		sb.append(", duyetMuon=");
		sb.append(getDuyetMuon());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.thuvien.model.Phieumuon");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nguoiDung</column-name><column-value><![CDATA[");
		sb.append(getNguoiDung());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sach</column-name><column-value><![CDATA[");
		sb.append(getSach());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soLuong</column-name><column-value><![CDATA[");
		sb.append(getSoLuong());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayMuon</column-name><column-value><![CDATA[");
		sb.append(getNgayMuon());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ngayTra</column-name><column-value><![CDATA[");
		sb.append(getNgayTra());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xacNhan</column-name><column-value><![CDATA[");
		sb.append(getXacNhan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trangThai</column-name><column-value><![CDATA[");
		sb.append(getTrangThai());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duyetMuon</column-name><column-value><![CDATA[");
		sb.append(getDuyetMuon());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Phieumuon.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Phieumuon.class
		};
	private long _id;
	private long _nguoiDung;
	private long _sach;
	private long _soLuong;
	private Date _ngayMuon;
	private Date _ngayTra;
	private long _xacNhan;
	private long _trangThai;
	private long _duyetMuon;
	private Phieumuon _escapedModel;
}